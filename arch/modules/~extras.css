

.tab-audio-button {
  display: none !important;
}


  #navigator-toolbox:not([animate='true']) #titlebar {
     
        &::before {
        border-radius: 11px !important;
          background: transparent !important;
        content: '';
          position: absolute;
        
         
  
          
         
          pointer-events: none;
          z-index: -1;
         
        }

        &::after {
          content: '';
          position: absolute;
        
          background: transparent !important;
         
          background-image: url(chrome://browser/content/zen-images/grain-bg.png);
          pointer-events: none;
          z-index: 0;
          opacity: var(--zen-grainy-background-opacity, 0);
          mix-blend-mode: overlay;
        }
    
    
         &::before {
    position:absolute;
    inset: 0;
    content:'';
    border-radius: 8px;
    background: transparent !important;
    opacity: 0.75;
  }
    
    
      }










/* === Custom Tab Height for Touch Density === */
:root[uidensity="touch"] {
  --tab-min-height: 39px !important; /* Default is 41px - Change 50px to your desired height */
}
 



#tabbrowser-arrowscrollbox[orient="vertical"] #tabbrowser-arrowscrollbox-periphery > #tabs-newtab-button,
#vertical-tabs-newtab-button {
  appearance: none;
  border-radius: 12px !important;
  height: 0.5rem !important;
 min-height: 38px !important;
  line-height: var(--tab-label-line-height);
  border-radius: var(--border-radius-medium);
  padding-left: 12px !important;
  width: var(--tab-collapsed-background-width);
  margin-inline: 0px !important;

  #tabbrowser-tabs[orient="vertical"]:not([expanded]) & > .toolbarbutton-text {
    display: flex;
   
  }

  &:hover {
    border-radius: 12px !important;
    height: 8px !important;
    background-color: var(--tab-hover-background-color);
    outline-color: var(--tab-hover-outline-color);
  }

  &:focus-visible {
    outline: var(--focus-outline);
    outline-offset: var(--focus-outline-inset);
  }

  > .toolbarbutton-text {
    text-align: start;
    margin-left: 5px !important;
    padding-inline-start: var(--tab-icon-end-margin);
  }
}

/*------------------------------------------------------------------------------------------------------------------------------------*/
 /*------------------------------------------------------------------------------------------------------------------------------------*/
      * {
  /* Colors */
  --bg-primary-color: var(--bg-accent-color, var(--zen-primary-color));
  --bg-colors-primary: color-mix(in srgb, var(--bg-primary-color) 50%, black 50%);
  --bg-colors-secondary: color-mix(in srgb, var(--bg-colors-primary) 20%, white 80%);
  --bg-colors-tertiary: color-mix(in srgb, var(--bg-primary-color) 2%, white 98%);
  --bg-colors-primary-foreground: color-mix(in srgb, var(--bg-primary-color) 80%, white 20%);

  @media (prefers-color-scheme: dark) {
    --bg-colors-primary: color-mix(in srgb, var(--bg-primary-color) 20%, var(--zen-dark-color-mix-base) 80%);
    --bg-colors-secondary: color-mix(in srgb, var(--bg-primary-color) 30%, var(--zen-dark-color-mix-base) 70%);
    --bg-colors-tertiary: color-mix(in srgb, var(--bg-primary-color) 1%, var(--zen-dark-color-mix-base) 99%);
    --bg-colors-primary-foreground: color-mix(in srgb, var(--bg-primary-color) 80%, white 20%);

    @media -moz-pref('zen.theme.color-prefs.colorful') {
      --bg-colors-primary: color-mix(in srgb, var(--bg-primary-color) 50%, black 50%);
      --bg-colors-secondary: color-mix(in srgb, var(--bg-primary-color) 40%, black 60%);
      --bg-colors-tertiary: color-mix(in srgb, var(--bg-primary-color) 15%, black 85%);
      --bg-colors-primary-foreground: color-mix(in srgb, var(--bg-primary-color) 80%, white 20%);
    }
  }

  /* Material: Mistcrylic */
  --bg-mat-mc-background: color-mix(in srgb, var(--bg-primary-color) 40%, rgba(255, 255, 255, 0.8));
  --bg-mat-mc-shadow-color: rgba(0, 0, 0, 0.3);
  --bg-mat-mc-border-color: rgba(255, 255, 255, 0.1);
  --bg-mat-mc-shadow-size: 10px;
  --bg-mat-mc-blur-radius: 15px;

  @media (prefers-color-scheme: dark) {
    --bg-mat-mc-background: color-mix(in srgb, var(--bg-colors-secondary) 50%, rgba(0, 0, 0, 0.8));
  }

  /* Material: Haze */
  --bg-mat-hz-background: rgba(255, 255, 255, 0.8);
  --bg-mat-hz-background-tinted: color-mix(in srgb, var(--bg-primary-color) 20%, rgba(255, 255, 255, 0.8));
  --bg-mat-hz-blur-radius: 100px;
  --bg-mat-hz-shadow-color: rgba(0, 0, 0, 0.3);
  --bg-mat-hz-shadow-size: 10px;
  --bg-mat-hz-saturation: 3;
  --bg-mat-hz-contrast: 2;

  @media (prefers-color-scheme: dark) {
    --bg-mat-hz-background: rgba(0, 0, 0, 0.8);
    --bg-mat-hz-background-tinted: color-mix(in srgb, var(--bg-colors-secondary) 20%, rgba(0, 0, 0, 0.8));
  }

  /* Material: Glass */
  --bg-mat-ga-background: color-mix(in srgb, var(--bg-colors-secondary) 75%, transparent);
  --bg-mat-ga-blur-radius: 10px;
  --bg-mat-ga-shadow-size: 10px;
  --bg-mat-ga-shadow-opacity: 75%;
  --bg-mat-ga-shadow-color: color-mix(in srgb, var(--bg-colors-secondary) var(--bg-mat-ga-shadow-opacity), black);

  @media (prefers-color-scheme: dark) {
    --bg-mat-ga-shadow-color: color-mix(in srgb, var(--bg-colors-secondary) var(--bg-mat-ga-shadow-opacity), white);

    @media -moz-pref("bg.theme.force-glass-dark-shadows") {
      --bg-mat-ga-shadow-color: color-mix(in srgb, var(--bg-colors-secondary) var(--bg-mat-ga-shadow-opacity), black);
    }
  }

       * {
 --bg-primary-color: color-mix(in srgb, var(--zen-primary-color) 69%, transparent 100%);

      --bg-colors-primary: color-mix(in srgb, var(--bg-primary-color) 50%, black 50%);
      --bg-colors-secondary: color-mix(in srgb, var(--bg-colors-primary) 20%, white 80%);

      @media (prefers-color-scheme: dark) {
        --bg-colors-primary: color-mix(in srgb, var(--bg-primary-color) 20%, #1d1d1d 80%);
        --bg-colors-secondary: color-mix(in srgb, var(--bg-primary-color) 30%, #1d1d1d 70%);
      }

      /* Material: Haze */
      --bg-mat-hz-background: rgba(255, 255, 255, 0.8);
      --bg-mat-hz-background-tinted: color-mix(in srgb, var(--bg-primary-color) 30%, rgba(255, 255, 255, 0.8));
      --bg-mat-hz-blur-radius: 100px;

      @media (prefers-color-scheme: dark) {
        --bg-mat-hz-background: rgba(0, 0, 0, 0.8);
        --bg-mat-hz-background-tinted: color-mix(in srgb, var(--bg-colors-secondary) 40%, rgba(0, 0, 0, 0.8));
      }

      /* Material: Glass */
      --bg-mat-ga-background: color-mix(in srgb, var(--bg-colors-secondary) 60%, transparent);
      --bg-mat-ga-shadow-color: color-mix(in srgb, var(--bg-colors-secondary) 75%, light-dark(black, white));
      --toolbarbutton-hover-background: color-mix(in srgb, light-dark(#1d1d1d, #ebebeb) 10%, transparent 90%);
      --toolbarbutton-active-background: light-dark(rgba(0, 0, 0, 0.07), rgba(255, 255, 255, 0.11));

      @media -moz-pref("bg.theme.force-dark-shadows") {
        --bg-mat-ga-shadow-color: color-mix(in srgb, var(--bg-colors-secondary) 75%, black);
      }}

      

#browser{
 
  backdrop-filter: saturate(var(--bg-mat-hz-saturation)) contrast(var(--bg-mat-hz-contrast)) blur(var(--bg-mat-hz-blur-radius)) !important;
       
        background-color: var(--bg-mat-ga-background) !important;
}

/*

#zen-main-app-wrapper{
   backdrop-filter: saturate(var(--bg-mat-hz-saturation)) contrast(var(--bg-mat-hz-contrast)) blur(var(--bg-mat-hz-blur-radius)) !important;
       
        background-color: var(--bg-mat-ga-background) !important;

}*/

 


menupopup, panel[type="arrow"] {
  @media (-moz-windows-mica-popups) {
    {
      appearance: auto !important;
      -moz-default-appearance: menupopup;
      --panel-background: light-dark(rgba(255, 255, 255, 0.5), rgba(0, 0, 0, 0.5)) !important;
      --panel-border-color: transparent !important;
      --panel-shadow-margin: 0px !important;
      transition-duration: 0s !important;
    }
  }
}

#urlbar-zoom-button {
  appearance: none;
  margin-right: 0px !important;
  margin-top: 5px !important;
  font-size: 0.7em !important;
 padding-left: 8px !important;
  padding-top: 4px !important;
    padding-bottom: 4px !important;
  padding-right: 7px !important;
  border-radius: var(--urlbar-icon-border-radius);
  background: none !important;
  background-color: light-dark(rgba(255, 255, 255, 0.5), rgba(0, 0, 0, 0.2)) !important;
  color: var(--urlbar-box-text-color);
  margin-block: calc((var(--urlbar-min-height) - 20px) / 2 - 1px - var(--urlbar-container-padding));
  overflow: hidden;
}


@-moz-document url("chrome://global/content/pictureinpicture/player.xhtml") {
  html {
    border-radius: 60px !important;
  }
}


 /* The following rules apply overflow masks to the unfocused urlbar
     This mask may be overriden when a Contextual Feature Recommendation is shown. */
  #urlbar:not([focused])[textoverflow="both"] > .urlbar-input-container > .urlbar-input-box > & {
    mask-image: none !important;
  
   
  }
  #urlbar:not([focused])[textoverflow="right"] > .urlbar-input-container > .urlbar-input-box > & {
    mask-image: none !important;
    margin-top: 0.4rem !important;
   
  }
  #urlbar:not([focused])[textoverflow="left"] > .urlbar-input-container > .urlbar-input-box > & {
    mask-image: none !important;
    
  }
  #urlbar:not([focused])[textoverflow="left"][domaindir="rtl"] > .urlbar-input-container > .urlbar-input-box > & {
    mask-image: none !important;
  }
}

 #urlbar:not([focused]) .urlbar-input-container , .urlbar-input-box   {
    mask-image: none !important;
    margin-top: -0.04rem !important;
  }

  #urlbar-searchmode-switcher {
  margin-top: 0.35rem !important;
    height: 2rem !important;
    min-height: 2px !important;
 border-radius: 9px !important;
    padding: 5px !important;
    scale: 0.9 !important;
 background-color: light-dark(rgba(255, 255, 255, 0.5), rgba(0, 0, 0, 0.15)) !important;
    padding-top: 1.1rem !important;
      padding-bottom: 1.1rem !important;
   
}


.urlbar-revert-button {
  list-style-image: url(https://raw.githubusercontent.com/ferrocyante/Arc-H/96ca1ca6dfa4dcd2692505cabc4f987abe5fca08/extras/fill%20site.svg) !important;
  fill: none !important;
  background-size: contain !important;
  margin-top: 1.8px !important;
  height: 32px !important;
  width: 33px !important;
  margin-right: -6px !important;
}


#searchmode-switcher-chicklet {
   background-color: light-dark(rgba(255, 255, 255, 0.5), rgba(0, 0, 0, 0.15)) !important;
  border-start-end-radius: var(--toolbarbutton-border-radius);
  border-end-end-radius: var(--urlbar-icon-border-radius);
  align-items: center;
  scale: 0.9 !important;
margin-left: -4px !important;
  padding-left: 8px !important;
  margin-top: 0.35rem !important;
  border-radius: 9px !important;
  height: 2rem !important;
   padding-top: 1.1rem !important;
      padding-bottom: 1.1rem !important;
   
  margin-inline-end: var(--urlbar-searchmodeswitcher-margin-inline-end);
  display: none;
}


















.tabbrowser-tab{
 
  margin-left: -1.05px !important;
}


/* Zen 1.12.6b Fix */
:root[customizing] #TabsToolbar-customization-target {
  visibility: visible !important;
}

.zen-workspace-pinned-tabs-section {
  display: flex !important;
  flex-direction: column;

}







#zen-media-controls-toolbar {
  & toolbaritem {
    flex-grow: 1;
    padding: 0;
    transition: padding 0.3s ease-out ;
    position: absolute;
    left: 0.5px !important;
    width: 99.3% !important;
  background: rgba(0,0,0,0.5) !important;
    
    bottom: -11px !important;
    padding: 4px !important;
    border-radius: 12px !important;
    filter: brightness(120%) !important;
backdrop-filter: brightness(40%) blur(25px) saturate(1.1) contrast(1) !important;
    
   
   
  }
}




/* ==== "Miniplayer" ==== */
/*----------------------------------animation shit ---------------------------------*/
@keyframes appear-animation {
  0% {
    gap: 0;
  }

  40% {
    gap: 9px;
  }

  100% {
    gap: 6px;
  }
}

#zen-media-current-time, #zen-media-duration {
  font-variant-numeric: tabular-nums;
}


    toolbarbutton {
      z-index: 999 !important;
    }
  }

  &:hover {
    @media (-moz-bool-pref: "natsumi.experiments.miniplayer-bounce") {
      /* Hidden under a pref in case Cheff steals this */
      & #zen-media-main-vbox {
        animation: appear-animation 0.3s ease-in-out !important;
      }
    }
  }

  &:not(:hover) {
    {
      & #zen-media-main-vbox {
        transition: gap 0.15s ease-in-out !important;
      }
    }

    /*-----------------------------------------------*/
    #zen-media-service-hbox {
      padding-top: 0 !important;
    }

    & > toolbaritem {
      &::after {
        opacity: 0;
      }
    }
  }



  #zen-media-title {
    font-size: 17px !important;
    margin-top: -4px !important;
    height: auto !important;
     margin-bottom: 2px !important;
  }

  #zen-media-artist {
    font-size: 10px !important;
   
  }
}
.tab-text.tab-label {
      font-size: 8px !important;
    }

#theme-Tab-Text-Size {
    .tab-text.tab-label {
      font-size: 22px !important;
    }
  }
}

#zen-media-info-vbox {
  #zen-media-controls-toolbar:not([media-position-hidden='true']) & {
    transition-delay: 0.01s !important;
    transform: translateY(-0.4rem);
  }
  overflow-x: hidden;
  overflow-x: visible;
  white-space: nowrap;
  /* Overflow inner box shadow from the left to simulate overflow */
  mask-image: none !important;

  &::before {
    content: '';
    position: absolute;
    width: 0.6em;
    background: none !important;
    pointer-events: none;
    top: 6px;
    left: -2px;
    height: calc(100% - 6px);
    z-index: 1;
  }

  & label {
    min-height: 16px;
    margin-left: 0;
    font-weight: 500;
    animation: zen-marquee-h 10s ease-in-out infinite;
  }
}


#zen-media-info-vbox {
  mask-image: linear-gradient(to left, transparent, var(--zen-media-control-bg) 0.6em, var(--zen-media-control-bg) calc(100% - 0.6em), transparent) !important;

  &::before {
    display: none !important;
  }
}


#zen-media-main-vbox {
  margin-bottom: 1px !important;
  margin-top: 1px !important;
}


#zen-media-progress-bar {
    appearance: none;
    width: 100%;
    height: var(--progress-height);
    margin: 0 8px;
    border-radius: 2px;
    background-color: rgba(255, 255, 255, 0.2);
    cursor: pointer;
    transition: height 0.15s ease-out;

    &::-moz-range-track {
      background: rgba(255, 255, 255, 0.2) !important;
      border-radius: 999px;
      height: 3px !important;
    }

    &::-moz-range-progress {
      background:  rgba(76, 218, 218, 1.8) !important;
      border-radius: 999px;
      height: 3px !important;
    }

    &::-moz-range-thumb {
      background: rgba(0, 55, 55, 1) !important;
      border: none;
      width: calc(var(--progress-height) * 2);
      height: calc(var(--progress-height) * 2);
      border-radius: 50%;
      cursor: pointer;
    }
}







/*---------------------------------------------*/




.sidebar-panel {
  background: transparent !important;
  font-weight: 600 !important;
  opacity: 0.7 !important;
}


/* Transparent Findbar */
findbar {
  background: none !important;
 
}






.tab-text{
  width: 98% !important;
  overflow: hidden;
  display: inline-block;
  text-overflow: ellipsis;
  white-space: nowrap;
  opacity: 1 !important;
  
   filter:  brightness(100%)  !important;
  
}



#tabbrowser-tabs {
  & .tabbrowser-tab {
    


    &[pinned]:not([pending='true']):not([zen-essential]) {
     

        & .tab-icon-stack {
   
  
    scale: 1.1 !important;
    margin-left: 2px !important;}
   
    & .tab-label {
      margin-left: 1px !important;
     
    }
      }
    } }

  




/* Text on general tab bar */

.tab-text:not([pinned]) {
  margin-top: 0px !important;
  margin-left: 1px !important;
}


/* reduce favicon sizes */
.tab-icon-image:not([pinned]) {
  
  scale: 1.1 !important;
  margin-left: 5px !important;
 
}



/*Styling for Tab close button*/
.tab-close-button {
  width: 18px !important;
  height: 18px !important;
  padding: 5px !important;
  border-radius: 20px !important;
}

/*Tab close button colors, also for hover*/
.close-icon {
  background-color: color-mix(
    in srgb,
    currentColor 10%,
    transparent
  ) !important;
}

.close-icon:hover {
  transition: 0.1s !important;
  background-color: color-mix(
    in srgb,
    currentColor 30%,
    transparent
  ) !important;
}






/* ==== natsumi-PiP ==== */

@media not (-moz-bool-pref: "natsumi.pip.disabled") {
  @-moz-document url("chrome://global/content/pictureinpicture/player.xhtml") {
    /*noinspection CssInvalidFunction*/
    * {
      --natsumi-primary-color: #a0d490;
      --natsumi-colors-primary: color-mix(in srgb, var(--natsumi-primary-color) 50%, black 50%);
      --natsumi-colors-secondary: color-mix(in srgb, var(--natsumi-colors-primary) 20%, white 80%);

      @media (prefers-color-scheme: dark) {
        --natsumi-colors-primary: color-mix(in srgb, var(--natsumi-primary-color) 20%, #1d1d1d 80%);
        --natsumi-colors-secondary: color-mix(in srgb, var(--natsumi-primary-color) 30%, #1d1d1d 70%);
      }

      /* Material: Haze */
      --natsumi-mat-hz-background: rgba(255, 255, 255, 0.8);
      --natsumi-mat-hz-background-tinted: color-mix(in srgb, var(--natsumi-primary-color) 30%, rgba(255, 255, 255, 0.8));
      --natsumi-mat-hz-blur-radius: 100px;

      @media (prefers-color-scheme: dark) {
        --natsumi-mat-hz-background: rgba(0, 0, 0, 0.8);
        --natsumi-mat-hz-background-tinted: color-mix(in srgb, var(--natsumi-colors-secondary) 40%, rgba(0, 0, 0, 0.8));
      }

      /* Material: Glass */
      --natsumi-mat-ga-background: color-mix(in srgb, var(--natsumi-colors-secondary) 75%, transparent);
      --natsumi-mat-ga-shadow-color: color-mix(in srgb, var(--natsumi-colors-secondary) 75%, light-dark(black, white));
      --toolbarbutton-hover-background: color-mix(in srgb, light-dark(#1d1d1d, #ebebeb) 10%, transparent 90%);
      --toolbarbutton-active-background: light-dark(rgba(0, 0, 0, 0.07), rgba(255, 255, 255, 0.11));

      @media (-moz-bool-pref: "natsumi.theme.force-dark-shadows") {
        --natsumi-mat-ga-shadow-color: color-mix(in srgb, var(--natsumi-colors-secondary) 75%, black);
      }
    }

    @keyframes pip-fadein-html {
      0% {
        background-color: transparent;
        scale: 0.8;
      }

      99% {
        background-color: transparent;
        scale: 1;
      }

      100% {
        background-color: black;
      }
    }

    @keyframes pip-fadein-player {
      0% {
        filter: blur(30px);
        opacity: 0;
      }

      70% {
        filter: blur(5px);
      }

      100% {
        filter: blur(0);
        opacity: 1;
      }
    }

    @media (-moz-bool-pref: "natsumi.pip.rounded") {
      /* This won't work on Linux (sadly), might be just a Gnome thing. */
      /* If you're seeing this, create an issue if it does indeed work */

      @media (-moz-platform: windows) {
        window, html, body {
          /* Share same radius as macOS for the sake of simplicity later */
          border-radius: 9px !important;
        }
      }
    }

    html {
      animation: pip-fadein-html 0.5s ease !important;
    }

    .player-holder {
      animation: pip-fadein-player 0.5s ease !important;
      clip-path: polygon(0 0, 100% 0, 100% 100%, 0 100%);
    }

    #controls {
      opacity: 1 !important;

      /*noinspection CssInvalidFunction*/
      & > button {
        opacity: 0 !important;
        top: 0 !important;
        filter: blur(5px);
        border-radius: 6px !important;
        transition: opacity 0.3s ease, top 0.3s ease, filter 0.3s ease, background-color 0.2s ease !important;
        backdrop-filter: saturate(var(--natsumi-mat-hz-saturation)) contrast(var(--natsumi-mat-hz-contrast)) blur(var(--natsumi-mat-hz-blur-radius)) !important;
        background-image: none !important;
        background-color: var(--natsumi-mat-hz-background) !important;
        box-shadow: 0 0 6px rgba(0, 0, 0, 0.5) !important;
        border: 2px solid light-dark(rgba(20, 20, 20, 0.1), rgba(235, 235, 235, 0.1)) !important;

        @media (-moz-bool-pref: "natsumi.pip.tinted-haze") {
          background-color: var(--natsumi-mat-hz-background-tinted) !important;
        }

        &::before {
          content: "";
          width: 16px;
          height: 16px;
          padding: 2px;
          display: flex;
          position: absolute;
          left: 50%;
          top: 50%;
          transform: translate(-50%, -50%);
          align-content: center;
          justify-content: center;
          fill: white !important;

          @media (prefers-color-scheme: light) {
            fill: black !important;
          }
        }

        &#close::before {
          content: url("chrome://browser/skin/zen-icons/close.svg") !important;
        }

        &#minimize::before {
          content: url("chrome://browser/skin/zen-icons/unpin.svg") !important;
        }

        &#unpip::before {
          content: url("chrome://browser/skin/zen-icons/screen.svg") !important;
        }

        &:hover {
          background-color: color-mix(in srgb, var(--natsumi-mat-ga-background) 80%, white) !important;

          @media (prefers-color-scheme: light) {
            background-color: color-mix(in srgb, var(--natsumi-mat-ga-background) 80%, black) !important;
          }
        }
      }

      #controls-bottom-gradient {
        display: none !important;
      }

      /*noinspection CssInvalidFunction*/
      #controls-bottom {
        opacity: 0 !important;
        bottom: -5px !important;
        background-color: var(--natsumi-mat-hz-background) !important;
        border-radius: 10px !important;
        padding: 10px 15px !important;
        margin: 0 5px !important;
        width: calc(100% - 10px) !important;
        box-sizing: border-box !important;
        box-shadow: 0 0 6px rgba(0, 0, 0, 0.5) !important;
        backdrop-filter: saturate(3) contrast(2) blur(var(--natsumi-mat-hz-blur-radius)) !important;
        filter: blur(10px);
        transition: opacity 0.3s ease, bottom 0.3s ease, filter 0.3s ease !important;
        border: 2px solid light-dark(rgba(20, 20, 20, 0.1), rgba(235, 235, 235, 0.1)) !important;

        @media (-moz-bool-pref: "natsumi.pip.tinted-haze") {
          background-color: var(--natsumi-mat-hz-background-tinted) !important;
        }

        @media (-moz-bool-pref: "natsumi.pip.native-border-radius") {
          /* For the sake of adding native radius, we'll reduce the margin of the controls here */
          width: 100% !important;
          margin: 0 !important;
          bottom: -10px !important;

          /*
          For now this config is available on macOS only, this'll be added to Windows and Linux
          once curved PiP for those platforms moves out of experiment status
          */
          @media (-moz-platform: macos) {
            border-radius: 5px !important;
          }
        }

        .start-controls {
          @media (width > 300px) {
            display: flex !important;
          }

          /*noinspection CssInvalidFunction*/
          #timestamp {
            font-size: 12px !important;
            color: light-dark(black, white) !important;
          }
        }

        .end-controls {
          display: flex !important;
        }

        #scrubber, #audio-scrubber {
          margin: 0 !important;

          /*noinspection CssInvalidFunction*/
          &::-moz-range-progress {
            background: light-dark(var(--natsumi-colors-primary), var(--natsumi-primary-color)) !important;
          }

          /*noinspection CssInvalidFunction*/
          &::-moz-range-track {
            background-color: light-dark(rgba(0, 0, 0, 0.1), rgba(255, 255, 255, 0.1)) !important;
          }

          /*noinspection CssInvalidFunction*/
          &::-moz-range-thumb {
            background-color: light-dark(var(--natsumi-colors-primary), var(--natsumi-primary-color)) !important;
            width: 12px !important;
            height: 12px !important;
            border: none !important;
            scale: 1;
            transition: scale 0.2s ease;
          }

          &:hover {
            &::-moz-range-thumb {
              opacity: 1;
            }
          }
        }

        #audio-scrubber {
          &::-moz-range-thumb {
            width: 8px !important;
            height: 8px !important;
            opacity: 1 !important;
          }
        }

        /*noinspection CssInvalidFunction*/
        button {
          opacity: 1 !important;
          position: relative;
          padding: 6px !important;
          background-size: 16px !important;
          width: 28px !important;
          height: 28px !important;
          border-radius: 6px !important;
          transition: background-color 0.2s ease !important;
          -moz-context-properties: fill;
          fill: light-dark(black, white) !important;

          &[disabled] {
            cursor: default !important;
            fill-opacity: 0.4 !important;

            &::after {
              display: none !important;
            }
          }

          &:not([disabled]) {
            &:hover {
              background-color: var(--toolbarbutton-hover-background) !important;
            }

            &:active {
              background-color: var(--toolbarbutton-active-background) !important;
            }
          }

          &#playpause {
            background-image: url("chrome://browser/skin/zen-icons/media-play.svg") !important;
          }

          &#audio {
            background-image: url("chrome://browser/skin/zen-icons/media-unmute.svg") !important;
          }

          &#seekBackward {
            background-image: url("chrome://browser/skin/zen-icons/reload.svg") !important;
            scale: -1 1;

            &::before {
              content: "5";
              font-size: 8px;
              position: absolute;
              top: 50%;
              left: 50%;
              transform: translate(50%, -50%);
              scale: -1 1;
            }

            &::after {
              scale: -1 1;
            }
          }

          &#seekForward {
            background-image: url("chrome://browser/skin/zen-icons/reload.svg") !important;

            &::before {
              content: "5";
              font-size: 8px;
              position: absolute;
              top: 50%;
              left: 50%;
              transform: translate(-50%, -50%);
            }
          }

          &#fullscreen {
            background-image: url("chrome://browser/skin/zen-icons/fullscreen.svg") !important;
          }
        }

        .controls-bottom-upper {
          margin: 0 !important;
          margin-bottom: 5px !important;
          width: 100% !important;
          height: fit-content !important;

          .scrubber-no-drag {
            margin: 0 !important;
          }

          &:has(#scrubber[hidden]) {
            display: none !important;
            margin: 0 !important;
          }
        }

        .controls-bottom-lower {
          margin: 0 !important;
        }
      }

      #settings {
        bottom: 80px !important;
        right: 0 !important;
        display: block !important;
        transition: opacity 0.3s ease, bottom 0.3s ease !important;

        .arrow {
          display: none !important;
        }

        /*noinspection CssInvalidFunction*/
        label, legend {
          font-family: system-ui !important;
          color: light-dark(black, white) !important;
        }

        /*noinspection CssInvalidFunction*/
        .slider {
          background-color: rgba(0, 0, 0, 0.07) !important;
          outline: 1px solid light-dark(#8f8f9d, #bfbfc9) !important;

          /*noinspection CssInvalidFunction*/
          &::before {
            background-color: light-dark(#8f8f9d, #bfbfc9) !important;
          }
        }

        input {
          /*noinspection CssInvalidFunction*/
          &:checked {
            border-color: light-dark(var(--natsumi-colors-primary), var(--natsumi-primary-color)) !important;
          }

          /*noinspection CssInvalidFunction*/
          &:checked + .slider {
            background-color: light-dark(var(--natsumi-colors-primary), var(--natsumi-primary-color)) !important;
            outline-color: light-dark(var(--natsumi-colors-primary), var(--natsumi-primary-color)) !important;

            &::before {
              background-color: white !important;
            }
          }
        }

        /*noinspection CssInvalidFunction*/
        & > .panel-fieldset {
          background-color: var(--natsumi-mat-ga-background) !important;
          backdrop-filter: blur(15px);
          filter: blur(0);
          transition: backdrop-filter 0.3s ease, filter 0.3s ease;
          border: 1px solid light-dark(rgba(20, 20, 20, 0.2), rgba(235, 235, 235, 0.3)) !important;
          box-shadow: 0 0 10px var(--natsumi-mat-ga-shadow-color) !important;
          padding: 0 !important;
        }

        /*noinspection CssInvalidFunction*/
        .grey-line {
          width: calc(100% - 10px) !important;
          margin: 0 auto !important;
          background-color: light-dark(rgba(20, 20, 20, 0.2), rgba(235, 235, 235, 0.3)) !important;
        }

        &.hide {
          bottom: 70px !important;
          opacity: 0 !important;
          pointer-events: none !important;

          & > .panel-fieldset {
            backdrop-filter: none !important;
            filter: blur(5px);
          }
        }
      }

      &.muted {
        #controls-bottom {
          #audio {
            background-image: url("chrome://browser/skin/zen-icons/media-mute.svg") !important;
          }
        }
      }

      &.playing {
        #controls-bottom {
          #playpause {
            background-image: url("chrome://browser/skin/zen-icons/media-pause.svg") !important;
          }
        }
      }

      &:hover {
        & > button {
          opacity: 1 !important;
          top: 10px !important;
          filter: blur(0) !important;
        }

        #controls-bottom {
          opacity: 1 !important;
          bottom: 5px !important;
          filter: blur(0);

          @media (-moz-bool-pref: "natsumi.pip.native-border-radius") {
            bottom: 0 !important;
          }
        }
      }
    }

    body:fullscreen {
      #controls {
        #controls-bottom {
          #fullscreen {
            background-image: url("chrome://browser/skin/zen-icons/fullscreen-exit.svg") !important;
          }
        }
      }
    }
  }
}



/*-------------------------------------------------------------------------------------------------------*/

/* === SVG Separator Line === */
.vertical-pinned-tabs-container-separator {
    background: none !important; /* Remove original background line */
    height: 16px !important; /* Set fixed height */
    max-height: none !important; /* Remove max-height restriction */
    display: flex !important; /* Use flexbox to center SVG */
    flex-direction: row !important; /* Arrange items horizontally */
    align-items: center !important; /* Vertically center items */
    justify-content: flex-end !important; /* Align items to the right */
    overflow: hidden !important; /* Hide overflow during animation */
    border: none !important; /* Ensure no border is applied by default */
    width: 100% !important;; /* Ensure separator takes full available width */
    box-sizing: border-box !important; /* Include padding in width */
    gap: 0; /* Set initial gap to 0 */
    margin: 5px 0 5px 0 !important;
  }
  
  
  
  .vertical-pinned-tabs-container-separator svg {
    width: 100% !important; /* Set width explicitly to account for padding */
    height: 1px; /* Reduced from 2px to make thinner line */
    min-height: 1.5px !important;
    display: block; /* Ensure SVG behaves as a block element */
    overflow: visible; /* Allow potential animations to go outside bounds */
    transition: width 0.15s ease-in-out; /* Add transition for width */
    min-width: 0; /* Allow shrinking below intrinsic size */
    margin-right: 0; /* Reduced from 8px to decrease space between line and buttons */
  }
  
  /* Shrink SVG width on separator hover */
  .vertical-pinned-tabs-container-separator:hover svg {
     width: calc(100% - 100px) !important; 
  }
  
  /* Update SVG line selectors to path */
  .vertical-pinned-tabs-container-separator svg path {
    stroke: light-dark(rgba(1, 1, 1, 0.15), rgba(255, 255, 255, 0.2)); /* Line color */
    stroke-width: 1px !important; /* Reduced from 1.5px to make thinner line */
    vector-effect: non-scaling-stroke; /* Keep stroke width consistent on scaling */
    fill: none; /* Ensure path isn't filled */
    transition: stroke 0.15s ease-in-out; /* Add transition for color */
  }
  
  /* Optional: Change path color slightly on hover */
  .vertical-pinned-tabs-container-separator:hover svg path {
      stroke: light-dark(rgba(1, 1, 1, 0.3), rgba(255, 255, 255, 0.4));
  }
  
  /* --- End SVG Path Animation --- */
  
  /* Sort & Clear Button Styling & Animation */
  .vertical-pinned-tabs-container-separator #sort-button,
  .vertical-pinned-tabs-container-separator #clear-button {
      /* Inherits font-size, color from tab_sort.uc.js */
      flex-shrink: 0; /* Prevent button from shrinking */
      min-width: 0; /* Ensure it can shrink to zero */
      max-width: 0; /* Use max-width to control hidden state */
      opacity: 0; /* Start fully transparent */
      overflow: hidden; /* Hide content when width is 0 */
      pointer-events: none; /* Not interactive initially */
      transition: max-width 0.15s ease-in-out, opacity 0.1s ease-in-out 0.05s; /* Transition max-width */
      margin: 0 !important; /* Override any potential margins */
      padding: 0 !important; /* Force zero padding initially */
      white-space: nowrap; /* Prevent label wrapping */
      border-radius: 4px; /* Match hover state */
  }
  
  .vertical-pinned-tabs-container-separator:hover #sort-button,
  .vertical-pinned-tabs-container-separator:hover #clear-button {
      max-width: 45px !important; /* Reduced from 55px to make buttons smaller */
      opacity: 1; /* Fade in */
      pointer-events: auto; /* Become interactive */
      padding: 1px !important; /* Restore original padding */
      margin-left: 2px !important; /* Reduced from 4px to decrease space between buttons */
      cursor: pointer !important;
  }
  
  /* Hide the line if the separator is meant to be hidden (e.g., no sortable tabs) */
  #vertical-pinned-tabs-container .zen-workspace-tabs-section[hide-separator] .vertical-pinned-tabs-container-separator,
  .vertical-pinned-tabs-container-separator.has-no-sortable-tabs {
      max-height: 0 !important;
      margin: 0 auto !important;
      padding: 0 !important; /* Remove padding when hidden */
      border: none !important; /* Ensure no border shows up */
      overflow: hidden !important; /* Hide content when container is hidden */
      gap: 0 !important; /* Remove gap when hidden */
  }
  
  .vertical-pinned-tabs-container-separator.has-no-sortable-tabs svg,
  .vertical-pinned-tabs-container-separator.has-no-sortable-tabs #sort-button,
  .vertical-pinned-tabs-container-separator.has-no-sortable-tabs #clear-button {
      display: none !important; /* Specifically hide the SVG and buttons */
      width: 0 !important;
      opacity: 0 !important;
  }
  /* === END SVG Separator Line === */
  
  /* Button icons styling */
  #sort-button, #clear-button {
      display: flex !important;
      align-items: center !important;
      justify-content: center !important;
      font-size: 11px !important; /* Reduced font size */
  }
  
  #sort-button .broom-icon {
      width: 12px !important; /* Reduced from 14px */
      height: 12px !important; /* Reduced from 14px */
      margin-right: 2px !important; /* Reduced from 4px */
      fill: currentColor !important;
  }
  
  #clear-button .arrow-icon {
      width: 12px !important; /* Reduced from 14px */
      height: 12px !important; /* Reduced from 14px */
      margin-right: 2px !important; /* Reduced from 4px */
      stroke: currentColor !important;
  }
  
  #sort-button .toolbarbutton-text,
  #clear-button .toolbarbutton-text {
      margin-left: 1px !important; /* Reduced from 2px */
  }
  
  /* Broom brushing animation - updated */
  @keyframes brush-sweep {
    0% { transform: rotate(0deg); }
    20% { transform: rotate(-15deg); }
    40% { transform: rotate(15deg); }
    60% { transform: rotate(-15deg); }
    80% { transform: rotate(15deg); }  
    100% { transform: rotate(0deg); }
  }
  
  #sort-button.brushing .broom-icon {
    animation: brush-sweep 0.8s ease-in-out;
    transform-origin: 50% 50%; /* Center of broom */
  }
  
  /* Arrow pulse animation */
  @keyframes arrow-pulse {
    0% { transform: scale(1); }
    50% { transform: scale(1.2); }
    100% { transform: scale(1); }
  }
  
  #clear-button.clearing .arrow-icon {
    animation: arrow-pulse 0.6s ease-in-out;
  }
  
  #sort-button.hidden-button, #clear-button.hidden-button {
      display: none !important;
      pointer-events: none !important;
      opacity: 0 !important;
      max-width: 0 !important;
      margin: 0 !important;
      padding: 0 !important;
  }
  
  /* Shrink SVG width on separator hover when no buttons are visible */
  .vertical-pinned-tabs-container-separator:hover svg {
     /* Calculate width relative to the base width */
     width: calc(100% - 
       (100px * 
         (1 - 
           (var(--sort-button-hidden, 0) * var(--clear-button-hidden, 0))
         )
       )
     ) !important; 
  }
  
  /* Hide the buttons entirely when they're hidden */
  .vertical-pinned-tabs-container-separator.has-no-sortable-tabs #sort-button,
  .vertical-pinned-tabs-container-separator.has-no-sortable-tabs #clear-button {
      display: none !important; /* Specifically hide the buttons */
      width: 0 !important;
      opacity: 0 !important;
  }
  
  /* The separator is always visible, even if buttons are hidden */
  .vertical-pinned-tabs-container-separator {
      display: flex !important;
      flex-direction: row !important;
      align-items: center !important;
    width: 93% !important;
    margin-left: 6.5px !important;
      justify-content: flex-end !important;
  }


